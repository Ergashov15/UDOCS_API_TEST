{"name": "test_get_documents_guid", "status": "broken", "statusDetails": {"message": "requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api.udocs.realtest.uz/api/client/documents/a84231da-7034-4779-8943-261afaf0a85a", "trace": "self = <test_get_document_method.TestGetDocumentMethod object at 0x0000015DAEDD4140>\n\n    @pytest.mark.get_document\n    @pytest.mark.get_documents_guid\n    def test_get_documents_guid(self):\n        file_path = Path(\"guid_id\")\n        guid = get_key(str(file_path), \"GUID\")\n>       response = self.document_api.get_document.get_client_documents_guid_selector(guid_id=guid)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntest\\document_method\\test_get_document_method.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nservises\\Document\\method_document\\get_method_document.py:43: in get_client_documents_guid_selector\n    return self._get(path=url, model=model, return_json=return_json,param=param)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nservises\\Document\\method_document\\get_method_document.py:23: in _get\n    return self.client.get_method(\nclient\\api_client.py:50: in get_method\n    resp = self._request(method=\"get\", path=path, params=params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nclient\\api_client.py:46: in _request\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [401]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api.udocs.realtest.uz/api/client/documents/a84231da-7034-4779-8943-261afaf0a85a\n\n.venv\\Lib\\site-packages\\requests\\models.py:1026: HTTPError"}, "attachments": [{"name": "Response Body", "source": "37303e20-42d2-4c4c-bd75-5a7c939f902f-attachment.json", "type": "application/json"}, {"name": "log", "source": "27efae28-4a0c-4d46-b290-4c5005a9e7d4-attachment.txt", "type": "text/plain"}], "start": 1752662879425, "stop": 1752662879502, "uuid": "88b722cc-d51b-494f-a37d-88c04eb7fd08", "historyId": "1e7fd1da78896b54fef38461baeede90", "testCaseId": "1e7fd1da78896b54fef38461baeede90", "fullName": "test.document_method.test_get_document_method.TestGetDocumentMethod#test_get_documents_guid", "labels": [{"name": "tag", "value": "get_documents_guid"}, {"name": "tag", "value": "get_document"}, {"name": "parentSuite", "value": "test.document_method"}, {"name": "suite", "value": "test_get_document_method"}, {"name": "subSuite", "value": "TestGetDocumentMethod"}, {"name": "host", "value": "PC--2997"}, {"name": "thread", "value": "28164-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.document_method.test_get_document_method"}]}